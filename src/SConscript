import os
Import('env', 'install_dir', 'build_executable', 'build_test')

#===============================================================================
# default list of subdirectories to build
#===============================================================================

sub_directories = ['library']


#===============================================================================
# invoke SConscript on each subdirectory
#===============================================================================

for directory_name in sub_directories:
    env.SConscript('%s/SConscript' % directory_name, {'env' : env, 'install_dir' : install_dir})


#===============================================================================
# build all tests if command line contained 'test=1'
#===============================================================================

if build_test == '1':
    test_env  = env.Clone();
    test_env.Append(LINKFLAGS = Split('-z origin'))
    test_env.Append(RPATH = [test_env.Literal(os.path.join('\\$$ORIGIN', os.pardir, 'lib')), test_env.Literal(os.path.join('\\$$ORIGIN', os.pardir, '../lib'))])
    test_env.SConscript('test/SConscript', {'env' : test_env, 'install_dir' : install_dir})


#===============================================================================
# build all tests if command line contained 'executable=1'
#===============================================================================

if build_executable == '1':
    executable_env  = env.Clone();
    executable_env.Append(LINKFLAGS = Split('-z origin'))
    executable_env.Append(RPATH = executable_env.Literal(os.path.join('\\$$ORIGIN', os.pardir, 'lib')))
    executable_env.SConscript('executable/SConscript', {'env' : executable_env, 'install_dir' : install_dir})

